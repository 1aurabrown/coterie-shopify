

/// Slightly lighten a color
/// @access public
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

/// Slightly darken a color
/// @access public
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}



$desktop-margin: 45px;
$mobile-margin: 25px;

$white: white;
$black: black;

$homepage-text-width-desktop: 38%;
$homepage-inset-desktop: $desktop-margin * 2;

$homepage-gap-desktop-m: 110px;
$homepage-gap-desktop-s: 90px;

$color-body-text: $black;
$color-icon: $white;

$color-yellow-base: #F9E1B7 ;
$color-yellow-dark: tint($color-yellow-base, 20%);
$color-yellow-medium: tint($color-yellow-base, 40%);
$color-yellow-light: tint($color-yellow-base, 60%);

// Background colors
$color-body: $white;

$color-arc: $white;
$color-footer: $white;

// Other colors
$color-form-text: #a5a5a5;

// Placeholders
$placeholder-color-foreground: #161d25;
$placeholder-color-background: #f9fafb;

// Helper colors for form error states
$color-disabled: #000000;
$color-disabled-border: #000000;
$color-error: #ff6d6d;
$color-error-bg: #ffffff;
$color-success: #000000;
$color-success-bg: #000000;

// Typography
$font-heading: 'SangBleuSans', serif;
$font-numeral: 'Praktika', sans-serif;
$font-body: 'PostGrotesk', sans-serif;
$font-body-weight: normal;
$font-body-style: normal;
$font-body-bold-weight: bold;


// Header
$header-height-desktop: 112px;
$header-height-mobile: 60px;
// Footer
$footer-height-desktop: 86px;
$footer-height-mobile: 55px;

// Transitions
$transition-duration: 250ms;
$transition-timing: ease-in-out;

// Grid
$grid-medium: 768px;
$grid-large: 992px;
$grid-widescreen: 1200px;
$grid-max-width: 1500px;
$grid-gutter: 30px;
$grid-gutter-mobile: $grid-gutter;
$grid-gutter-desktop: $grid-gutter;

// Breakpoints used with the media-query mixin
$small: 'small';
$medium: 'medium';
$medium-down: 'medium-down';
$medium-up: 'medium-up';
$large: 'large';
$large-down: 'large-down';
$large-up: 'large-up';
$widescreen: 'widescreen';

$breakpoints: (
  $small '(max-width: #{$grid-medium - 1})',
  $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',
  $medium-down '(max-width: #{$grid-large - 1})',
  $medium-up '(min-width: #{$grid-medium})',
  $large '(min-width: #{$grid-large}) and (max-width: #{$grid-widescreen - 1})',
  $large-down '(max-width: #{$grid-widescreen - 1})',
  $large-up '(min-width: #{$grid-large})',
  $widescreen '(min-width: #{$grid-widescreen})'
);

/*============================================================================
  Generate breakpoint-specific column widths and push classes
    - Default column widths: $breakpoint-has-widths: ($small, $medium-up);
    - Default is no push classes
    - Will not work if `styles/global/grid.scss` is removed
==============================================================================*/
$breakpoint-has-widths: ($small, $medium-up, $large-up);
